{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dir-map/dir-map.component.css","webpack:///./src/app/dir-map/dir-map.component.html","webpack:///./src/app/dir-map/dir-map.component.ts","webpack:///./src/app/loginform/loginform.component.css","webpack:///./src/app/loginform/loginform.component.html","webpack:///./src/app/loginform/loginform.component.ts","webpack:///./src/app/registerform/registerform.component.css","webpack:///./src/app/registerform/registerform.component.html","webpack:///./src/app/registerform/registerform.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body {\\r\\n  background-image: url('background3.jpg');\\r\\n  background-position: center;\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\nagm-map {\\r\\n  height: 300px;\\r\\n  padding-top:10px;\\r\\n  padding-bottom:10px;\\r\\n  padding-left:10px;\\r\\n  padding-right:10px;\\r\\n}\\r\\n\\r\\n#map{\\r\\n  margin-top:20px;\\r\\n}\\r\\n\\r\\nh2{\\r\\n  text-align: center;\\r\\n  color:black;\\r\\n  font-weight: bold;\\r\\n  font-size: 30px;\\r\\n}\\r\\n\\r\\n.container-fluid{\\r\\n  background-color:aquamarine;\\r\\n  box-shadow:10px lightgray;\\r\\n  margin:auto;\\r\\n}\\r\\n\\r\\n.container.container1{\\r\\n  background-color: blanchedalmond;\\r\\n  box-shadow:10px lightgray;\\r\\n  border-style:solid;\\r\\n\\r\\n}\\r\\n\\r\\n#id2\\r\\n{\\r\\n  box-shadow:10px lightgray;\\r\\n  padding:80px 100px 100px 220px;\\r\\n\\r\\n}\\r\\n\\r\\n.jumbotron{\\r\\n  background-color:wheat;\\r\\n  height:50px;\\r\\n}\\r\\n\\r\\nimg{\\r\\n    border-color:black;\\r\\n    border-radius:50%;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n  margin-top:5px;\\r\\n  border-radius:0%;\\r\\n}\\r\\n\\r\\n.card{\\r\\n  max-width:500px;\\r\\n  max-height:200px;\\r\\n  margin-top:10px;\\r\\n  margin-left:50px;\\r\\n  margin-right:50px;\\r\\n  margin-bottom:50px;\\r\\n}\\r\\n\\r\\n.row{\\r\\n  margin:auto;\\r\\n  padding:30px 30px 30px 30px;\\r\\n}\\r\\n\\r\\n.nav{\\r\\n  color:white;\\r\\n  height:150px;\\r\\n  padding:50px 20px 10px 500px;\\r\\n  text-align: center;\\r\\n  font-family:\\\"Arial\\\";\\r\\n}\\r\\n\\r\\n.footer{\\r\\n  color:white;\\r\\n  height:80px;\\r\\n  position: fixed;\\r\\n  bottom: 0;\\r\\n  width: 100%;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n#main{\\r\\n  background:linear-gradient(-90deg)\\r\\n}\\r\\n\"","module.exports = \"<body>\\n  <div>\\n    <nav class=\\\"container-fluid navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"/dashboard\\\">Accident Alert</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-controls=\\\"#navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n      </div>\\n      <div class=\\\"navbar-collapse collapse\\\" id=\\\"navbarSupportedContent\\\">\\n          <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\">Home</a> <!-- <span class=\\\"sr-only\\\">-->\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/latlng\\\">Emergency Service</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\" >Register</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" >Sign In</a>\\n            </li>\\n          </ul>\\n      </div>\\n    </nav>\\n  </div>\\n  <router-outlet></router-outlet>\\n  <br/><br/><br/>\\n</body>\\n<footer class=\\\"footer page-footer font-small bg-dark\\\">\\n  <div class=\\\"footer-copyright text-center py-3\\\">© 2018 Copyright:\\n    <a routerLink=\\\"/dashboard\\\"> Accident Alert</a>\\n  </div>\\n</footer>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'AccidentAlert';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule} from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AgmCoreModule } from '@agm/core';\nimport { AgmDirectionModule } from 'agm-direction';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\nimport { DirMapComponent } from './dir-map/dir-map.component';\nimport { RegisterformComponent } from './registerform/registerform.component';\nimport { LoginformComponent } from './loginform/loginform.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst Routes = [\n\n                  {\n                    path: '',\n                    component: DashboardComponent\n                  },\n                  {\n                    path: 'dashboard',\n                    component: DashboardComponent\n                  },\n                  {\n                    path: 'latlng',\n                    component: DirMapComponent\n                  },\n                  {\n                    path: 'register',\n                    component: RegisterformComponent\n                  },\n                  {\n                    path: 'login',\n                    component: LoginformComponent\n                  }\n               ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    DirMapComponent,\n    RegisterformComponent,\n    LoginformComponent,\n    DashboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(Routes),\n    AgmCoreModule.forRoot({\n    apiKey: 'AIzaSyCubksSVmapTf6GsXYeeYocOrowwmhQbMA'\n  }),\n  AgmDirectionModule\n],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"btn-group-vertical\\\" style=\\\"margin:200px 200px 250px 600px\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg\\\" style=\\\"margin-bottom:20px\\\"><a [routerLink]=\\\"['/latlng']\\\" routerLinkActive=\\\"router-link-active\\\" style=\\\"color:white\\\">Emergency Services</a></button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" style=\\\"margin-bottom:20px\\\"><a [routerLink]=\\\"['/register']\\\" routerLinkActive=\\\"router-link-active\\\" style=\\\"color:white\\\">Register</a></button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"agm-map {\\r\\n  height: 400px;\\r\\n  width: 100%;\\r\\n\\r\\n}\\r\\n#map, #map2\\r\\n{\\r\\n  height: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div  class=\\\"container-fluid\\\">\\n  <div  style=\\\"margin-left:350px;\\\" class=\\\"row btn-group\\\">\\n    <div class=\\\"col-md-3\\\">\\n        <button class=\\\"btn btn-primary\\\" style=\\\"margin:10px 10px 10px 10px\\\" name = \\\"hospital\\\" value=\\\"hospital\\\" (click)=\\\"getdata('Hospital')\\\">Hospital</button>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n        <button class=\\\"btn btn-primary\\\" style=\\\"margin:10px 10px 10px 10px\\\" name = \\\"bloodbank\\\" value=\\\"bloodbank\\\" (click)=\\\"getdata('Blood Bank')\\\">Blood Bank</button>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n        <button class=\\\"btn btn-primary\\\" style=\\\"margin:10px 10px 10px 10px\\\" name = \\\"police\\\" value=\\\"police\\\" (click)=\\\"getdata('Police Station')\\\">Police Station</button>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <button class=\\\"btn btn-primary\\\" style=\\\"margin:10px 10px 10px 10px\\\" name = \\\"fire\\\" value=\\\"fire\\\" (click)=\\\"getdata('Fire Station')\\\">Fire Station</button>\\n  </div>\\n  </div>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row card-deck\\\">\\n        <div *ngFor=\\\"let hospData of hospData\\\" class=\\\"card\\\">\\n          <div class=\\\"card-header text-center\\\" >\\n            <strong>\\n              {{hospData.name}}\\n            </strong>\\n          </div>\\n          <div class=\\\"card-body text-center\\\" >\\n            {{hospData.address}}\\n          </div>\\n          <div class=\\\"card-footer text-center\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"myMap(hospData)\\\"><strong>Confirm this {{this.query}}</strong></button>\\n          </div>\\n        </div>\\n  </div>\\n</div>\\n<br/>\\n<div class=\\\"container-fluid\\\">\\n  <agm-map  [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"13\\\" (mapClick)=\\\"mapClicked($event)\\\">\\n    <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [label]=\\\"victimLabel\\\" [opacity]=\\\"0.6\\\" (markerClick)=\\\"clickedMarker()\\\">\\n        <agm-info-window>\\n            <strong>Current Location</strong>\\n            <br/>\\n            <span>Latitude: {{this.lat}}</span>\\n            <br/>\\n            <span>Longitude: {{this.lng}}</span>\\n          </agm-info-window>\\n    </agm-marker>\\n    <agm-direction [origin]=\\\"this.origin\\\" [destination]=\\\"this.destination\\\">\\n        <!-- <agm-info-window>\\n            <strong>{{this.currentData.name}}</strong>\\n            <br/>\\n            <span>Latitude: {{this.currentData.lat}}</span>\\n            <br/>\\n            <span>Longitude: {{this.currentData.lng}}</span>\\n          </agm-info-window> -->\\n    </agm-direction>\\n    </agm-map>\\n</div>\\n<br/>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Router } from '../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-dir-map',\n  templateUrl: './dir-map.component.html',\n  styleUrls: ['./dir-map.component.css']\n})\n\nexport class DirMapComponent implements OnInit {\n\n  hospData: any = [];\n  lat: number;\n  lng: number;\n  victimLabel = 'X';\n  HospitalLabel = 'H';\n  origin: any = {};\n  destination: any = {};\n  currentHospData: HospitalData;\n  query: string;\n  status: any;\n  constructor(private obj: Router, private http: HttpClient) { }\n\n  ngOnInit() {\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      },\n      (error) => {\n        switch (error.code) {\n            case error.PERMISSION_DENIED:\n                console.log('Error: User denied the request for Geolocation.');\n                break;\n            case error.POSITION_UNAVAILABLE:\n                 console.log('Error: Location information is unavailable.');\n                 break;\n            case error.TIMEOUT:\n                 console.log('Error: The request to get user location timed out.');\n                 break;\n          }\n          this.lat = 0;\n          this.lng = 0;\n          this.hospData = [];\n          alert('Location Information is required');\n          this.obj.navigate(['/latlng']);\n\n      });\n  }\n\n  getdata(query) {\n    this.query = query;\n    this.http.get('/latlng/' + query + ',' + this.lat + ',' + this.lng).subscribe((response) => {\n      this.hospData = response;\n    });\n  }\n\n  myMap(data) {\n    this.currentHospData = data;\n    this.origin = { lat: this.currentHospData.lat, lng: this.currentHospData.lng };\n    this.destination = { lat: this.lat, lng: this.lng };\n    const url = this.currentHospData.placeId + ',' + this.lat + ',' + this.lng;\n    this.http.get('/latlng/hosp/' + url).subscribe((response: any) => {\n      this.status = JSON.parse(response);\n      console.log(this.status);\n      console.log(this.status.status);\n\n      if (this.status.status === 'failure') {\n        window.alert('Alert sent to corresponding ' + this.query);\n        console.log('Ambulance is Arriving!!!!');\n        console.log(this.status.message.content);\n      }\n    });\n    }\n\n  clickedMarker() {\n    console.log('Clicked the marker:');\n  }\n\n  mapClicked($event: MouseEvent) {\n    console.log('Map Clicked');\n  }\n}\n\ninterface HospitalData {\n  lat: number;\n  lng: number;\n  address: string;\n  name: string;\n  placeId: string;\n  phone: number;\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <h1 align=\\\"center\\\" style=\\\"color:white\\\">Login</h1>\\n\\n<div class=\\\"jumbotron\\\">\\n<form #userlogin = \\\"ngForm\\\" (ngSubmit) = \\\"onClickSubmit(userlogin.value)\\\" >\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"emailIdL\\\">Email address:</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\"  name=\\\"emailIdL\\\" id=\\\"emailIdL\\\" required=\\\"required\\\" (change)=\\\"clear()\\\"  ngModel emailIdL>\\n    <p name=\\\"emailValidL\\\" id=\\\"emailValidL\\\" style=\\\"color: red\\\">{{this.emailValidL}}</p>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"passwdL\\\">Password:</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name = \\\"passwdL\\\" id=\\\"passwdL\\\" required=\\\"required\\\" (change)=\\\"clear()\\\"  ngModel passwdL>\\n    <p name=\\\"passwd1ValidL\\\" id=\\\"passwd1ValidL\\\" style=\\\"color: red\\\">{{this.passwd1ValidL}}</p>\\n  </div>\\n  <div class=\\\"form-group form-check\\\">\\n    <label class=\\\"form-check-label\\\">\\n      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" (change)=\\\"clear()\\\" /> Remember me\\n    </label>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Log in</button>\\n  <br/>\\n  <a routerLink='/register' >Not a Member? Register</a>\\n  </form>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-loginform',\n  templateUrl: './loginform.component.html',\n  styleUrls: ['./loginform.component.css']\n})\nexport class LoginformComponent implements OnInit {\n\n  emailValidL: string;\n  passwd1ValidL: string;\n\n  constructor(private obj: Router) { }\n\n  ngOnInit() { }\n\n  onClickSubmit(data) {\n\n   if (data.emailIdL === '') {\n        this.emailValidL = 'Please enter Email Id';\n        console.log('Please enter Email Id');\n   } else if (data.emailIdL.indexOf('@', 0) < 0) {\n        this.emailValidL = 'Invalid Email id';\n        console.log('Invalid Mail id');\n   } else if (data.emailIdL.indexOf('.', 0) < 0) {\n        this.emailValidL = 'Invalid Email id';\n        console.log('Invalid Mail id');\n   } else if (data.passwdL === '') {\n        this.passwd1ValidL = 'Please enter Password';\n        console.log('Please enter Password');\n   } else {\n        alert('Welcome: ' + data.emailIdL);\n        this.obj.navigate(['/']);\n    }\n  }\n\n  clear() {\n    console.log('clear');\n    this.emailValidL = '';\n    this.passwd1ValidL = '';\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <h1 align=\\\"center\\\" style=\\\"color:white\\\">Registration</h1>\\n\\n<div class=\\\"jumbotron\\\">\\n<form #userregister = \\\"ngForm\\\" (ngSubmit) = \\\"onClickSubmit1(userregister.value)\\\" >\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"typeInst\\\">Enter Institution:</label>\\n        <select class=\\\"form-control\\\"  name=\\\"typeInst\\\" id=\\\"typeInst\\\"  required=\\\"required\\\" ngModel (change)=\\\"clear()\\\">\\n          <option value=\\\"Hospital\\\" selected>Hospital</option>\\n          <option value=\\\"Blood Bank\\\">Blood Bank</option>\\n          <option value=\\\"Police Station\\\">Police Station</option>\\n          <option value=\\\"Fire Station\\\">Fire Station</option>\\n        </select>\\n        <p id=\\\"typeInstValid\\\" style=\\\"color: red\\\">{{this.typeInstValid}}</p>\\n      </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Enter Name:</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"name\\\" id=\\\"name\\\"  required=\\\"required\\\" ngModel (change)=\\\"clear()\\\">\\n    <p id=\\\"nameValid\\\" style=\\\"color: red\\\">{{this.nameValid}}</p>\\n  </div>\\n   <div class=\\\"form-group\\\">\\n    <label for=\\\"emailId\\\">Email Id:</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"emailId\\\" id=\\\"emailId\\\" required=\\\"required\\\" ngModel (change)=\\\"clear()\\\" >\\n    <p name=\\\"emailValid\\\" id=\\\"emailValid\\\" style=\\\"color: red\\\">{{this.emailValid}}</p>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"phone\\\">Phone Number:</label>\\n    <input type=\\\"number\\\" class=\\\"form-control\\\"  name=\\\"phone\\\" id=\\\"phone\\\" required=\\\"required\\\" ngModel (change)=\\\"clear()\\\"  >\\n    <p name=\\\"phoneValid\\\" id=\\\"phoneValid\\\" style=\\\"color: red\\\">{{this.phoneValid}}</p>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"address\\\">Address:</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" id=\\\"address\\\" required=\\\"required\\\" ngModel (change)=\\\"clear()\\\" >\\n    <p name=\\\"addresssValid\\\" id=\\\"addresssValid\\\" style=\\\"color: red\\\">{{this.addressValid}}</p>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"passwd1\\\">Password:</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"passwd1\\\"  id=\\\"passwd1\\\"  required=\\\"required\\\" ngModel (change)=\\\"clear()\\\" >\\n    <p name=\\\"passwd1Valid\\\" id=\\\"passwd1Valid\\\" style=\\\"color: red\\\">{{this.passwd1Valid}}</p>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"passwd2\\\">Confirm Password:</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"passwd2\\\" id=\\\"passwd2\\\" required=\\\"required\\\" ngModel (change)=\\\"clear()\\\" >\\n    <p name=\\\"passwd2Valid\\\" id=\\\"passwd2Valid\\\" style=\\\"color: red\\\">{{this.passwd2Valid}}</p>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\">Register</button>\\n  <br/>\\n  <a routerLink='/login' >Already a member? Sign In</a>\\n  </form>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Router } from '../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-registerform',\n  templateUrl: './registerform.component.html',\n  styleUrls: ['./registerform.component.css']\n})\nexport class RegisterformComponent implements OnInit {\n\n  lat: number;\n  lng: number;\n  constructor(private obj: Router, private http: HttpClient) { }\n\n  nameValid = '';\n  emailValid = '';\n  addressValid = '';\n  passwd1Valid = '';\n  passwd2Valid = '';\n  phoneValid = '';\n  typeInstValid = '';\n  ngOnInit() {\n\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      },\n      (error) => {\n        this.lat = 0;\n        this.lng = 0;\n      }\n    );\n  }\n\n  onClickSubmit1(data) {\n\n    console.log('Form Data');\n    console.log('Lat: ' + this.lat);\n    console.log('Lng: ' + this.lng);\n\n    if (data.typeInst === '') {\n      this.typeInstValid = 'Please enter Institution Type';\n      console.log('Please enter Institution Type');\n    } else if (data.name === '') {\n      this.nameValid = 'Please enter Name';\n      console.log('Please enter Name');\n    } else if (data.emailId === '') {\n      this.emailValid = 'Please enter Email Id';\n      console.log('Please enter Email Id');\n    } else if (data.emailId.indexOf('@', 0) < 0) {\n      this.emailValid = 'Invalid Email id';\n      console.log('Invalid Email id');\n    } else if (data.emailId.indexOf('.', 0) < 0) {\n      this.emailValid = 'Invalid Email id';\n      console.log('Invalid Email id');\n    } else if (data.phone === '') {\n      this.phoneValid = 'Please enter Phone Number';\n      console.log('Please enter Phone Number');\n    } else if (data.address === '') {\n      this.addressValid = 'Please enter Address';\n      console.log('Please enter Address');\n    } else if (data.passwd1 === '') {\n      this.passwd1Valid = 'Please enter Password';\n      console.log('Please enter Password');\n    } else if (data.passwd2 === '') {\n      this.passwd2Valid = 'Please confirm Password';\n      console.log('Please confirm Password');\n    } else if (data.passwd1 !== data.passwd2) {\n      this.passwd2Valid = 'Passwords dont match';\n      console.log('Passwords dont match');\n    } else {\n      this.http.get('/latlng/insert/' + data.typeInst + ',' + data.name + ',' + data.address + ',' + this.lat + ',' + this.lng + ','  + data.emailId + ',' + data.phone + ',' + data.passwd1 )\n      .subscribe( (response) => {\n            console.log(response);\n            window.alert('Registeration successful try logging in');\n            this.obj.navigate(['/login']);\n      });\n      window.alert('Registeration successful try logging in');\n      this.obj.navigate(['/login']);\n    }\n  }\n  clear() {\n      console.log('clear');\n      this.typeInstValid = '';\n      this.nameValid = '';\n      this.emailValid = '';\n      this.phoneValid = '';\n      this.passwd1Valid = '';\n      this.passwd2Valid = '';\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}